/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#include <stdarg.h>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/TypedText.hpp>
#include <texts/TypedTextDatabase.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <touchgfx/TextProvider.hpp>

touchgfx::Font::StringWidthFunctionPointer touchgfx::Font::getStringWidthFunction = &touchgfx::Font::getStringWidthRTL;
touchgfx::LCD::DrawStringFunctionPointer touchgfx::LCD::drawStringFunction = &touchgfx::LCD::drawStringRTL;
touchgfx::TextProvider::UnicodeConverterInitFunctionPointer touchgfx::TextProvider::unicodeConverterInitFunction = &touchgfx::TextProvider::unicodeConverterInit;
touchgfx::TextProvider::UnicodeConverterFunctionPointer touchgfx::TextProvider::unicodeConverterFunction = &touchgfx::TextProvider::unicodeConverter;

//Default typed text database
extern const touchgfx::TypedText::TypedTextData* const typedTextDatabaseArray[];

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::Unicode::UnicodeChar texts_all_languages[] TEXT_LOCATION_FLASH_ATTRIBUTE =
{
    0x41d, 0x435, 0x43b, 0x44c, 0x437, 0x44f, 0x20, 0x434, 0x43e, 0x431, 0x430, 0x432, 0x438, 0x442, 0x44c, 0x20, 0x43d, 0x43e, 0x432, 0x43e, 0x435, 0x20, 0x441, 0x43e, 0x431, 0x44b, 0x442, 0x438, 0x435, 0x21, 0xa, 0xa, 0x412, 0x43e, 0x437, 0x43c, 0x43e, 0x436, 0x43d, 0x43e, 0x20, 0x441, 0x43e, 0x431, 0x44b, 0x442, 0x438, 0x435, 0x20, 0x43d, 0x430, 0x20, 0x44d, 0x442, 0x43e, 0x20, 0x432, 0x440, 0x435, 0x43c, 0x44f, 0x20, 0x443, 0x436, 0x435, 0xa, 0x437, 0x430, 0x43f, 0x43b, 0x430, 0x43d, 0x438, 0x440, 0x43e, 0x432, 0x430, 0x43d, 0x43e, 0x2c, 0x20, 0x20, 0x438, 0x43b, 0x438, 0x20, 0x43a, 0x43e, 0x43b, 0x438, 0x447, 0x435, 0x441, 0x442, 0x432, 0x43e, 0x20, 0x441, 0x43e, 0x431, 0x44b, 0x442, 0x438, 0x439, 0xa, 0x434, 0x43e, 0x441, 0x442, 0x438, 0x433, 0x43b, 0x43e, 0x20, 0x434, 0x435, 0x441, 0x44f, 0x442, 0x438, 0x2e, 0x0, // @0 "?????? ???????? ????? ???????!?????????? ??????? ?? ??? ????? ?????????????????,  ??? ?????????? ???????????????? ??????."
    0x417, 0x430, 0x43f, 0x443, 0x449, 0x435, 0x43d, 0x20, 0x440, 0x435, 0x436, 0x438, 0x43c, 0x20, 0x440, 0x430, 0x441, 0x43f, 0x438, 0x441, 0x430, 0x43d, 0x438, 0x44f, 0xa, 0x441, 0x443, 0x448, 0x43a, 0x430, 0x20, 0x431, 0x443, 0x434, 0x435, 0x442, 0x20, 0x437, 0x430, 0x43f, 0x443, 0x449, 0x435, 0x43d, 0x430, 0x20, 0xa, 0x430, 0x432, 0x442, 0x43e, 0x43c, 0x430, 0x442, 0x438, 0x447, 0x435, 0x441, 0x43a, 0x438, 0x20, 0xa, 0x432, 0x20, 0x43d, 0x430, 0x437, 0x43d, 0x430, 0x447, 0x435, 0x43d, 0x43e, 0x435, 0x20, 0x432, 0x440, 0x435, 0x43c, 0x44f, 0x20, 0x0, // @122 "??????? ????? ???????????????? ????? ???????? ?????????????? ?? ?????????? ????? "
    0x421, 0x443, 0x448, 0x43a, 0x430, 0x20, 0x434, 0x43b, 0x438, 0x442, 0x441, 0x44f, 0x20, 0x38, 0x20, 0x447, 0x430, 0x441, 0x43e, 0x432, 0xa, 0x43d, 0x430, 0x20, 0x43c, 0x430, 0x43a, 0x441, 0x438, 0x43c, 0x430, 0x43b, 0x44c, 0x43d, 0x43e, 0x20, 0xa, 0x432, 0x43e, 0x437, 0x43c, 0x43e, 0x436, 0x43d, 0x43e, 0x439, 0x20, 0x442, 0x435, 0x43c, 0x43f, 0x435, 0x440, 0x430, 0x442, 0x443, 0x440, 0x435, 0x0, // @204 "????? ?????? 8 ???????? ??????????? ?????????? ???????????"
    0x41f, 0x43e, 0x434, 0x43e, 0x433, 0x440, 0x435, 0x432, 0x20, 0x434, 0x43b, 0x438, 0x442, 0x441, 0x44f, 0x20, 0x31, 0x35, 0x20, 0x43c, 0x438, 0x43d, 0x443, 0x442, 0xa, 0x20, 0x43f, 0x440, 0x438, 0x20, 0x442, 0x435, 0x43c, 0x43f, 0x435, 0x440, 0x430, 0x442, 0x443, 0x440, 0x435, 0x20, 0x34, 0x30, 0x20, 0x433, 0x440, 0x430, 0x434, 0x443, 0x441, 0x43e, 0x432, 0x0, // @263 "???????? ?????? 15 ?????? ??? ??????????? 40 ????????"
    0x412, 0x44b, 0x20, 0x443, 0x432, 0x435, 0x440, 0x435, 0x43d, 0x44b, 0x20, 0x447, 0x442, 0x43e, 0x20, 0x445, 0x43e, 0x442, 0x438, 0x442, 0x435, 0x20, 0xa, 0x43e, 0x447, 0x438, 0x441, 0x442, 0x438, 0x442, 0x44c, 0x20, 0x440, 0x430, 0x441, 0x43f, 0x438, 0x441, 0x430, 0x43d, 0x438, 0x435, 0x20, 0x43f, 0x43e, 0x43b, 0x43d, 0x43e, 0x441, 0x442, 0x44c, 0x44e, 0x3f, 0x0, // @317 "?? ??????? ??? ?????? ????????? ?????????? ??????????"
    0x41d, 0x430, 0x441, 0x442, 0x440, 0x43e, 0x439, 0x43a, 0x430, 0x20, 0x442, 0x435, 0x43a, 0x443, 0x449, 0x435, 0x433, 0x43e, 0x20, 0x434, 0x43d, 0x44f, 0x20, 0x43d, 0x435, 0x434, 0x435, 0x43b, 0x438, 0x20, 0x438, 0x20, 0x432, 0x440, 0x435, 0x43c, 0x435, 0x43d, 0x438, 0x0, // @371 "????????? ???????? ??? ?????? ? ???????"
    0x422, 0x440, 0x435, 0x431, 0x443, 0x435, 0x442, 0x441, 0x44f, 0x20, 0x441, 0x435, 0x440, 0x432, 0x438, 0x441, 0x43d, 0x43e, 0x435, 0x20, 0x43e, 0x431, 0x441, 0x43b, 0x443, 0x436, 0x438, 0x432, 0x430, 0x43d, 0x438, 0x435, 0x21, 0x0, // @411 "????????? ????????? ????????????!"
    0x422, 0x440, 0x435, 0x431, 0x443, 0x435, 0x442, 0x441, 0x44f, 0x20, 0x441, 0x435, 0x440, 0x432, 0x438, 0x441, 0x43d, 0x43e, 0x435, 0xa, 0x20, 0x43e, 0x431, 0x441, 0x43b, 0x443, 0x436, 0x438, 0x432, 0x430, 0x43d, 0x438, 0x435, 0x0, // @445 "????????? ?????????? ????????????"
    0x43f, 0x440, 0x43e, 0x434, 0x43e, 0x43b, 0x436, 0x438, 0x442, 0x435, 0x43b, 0x44c, 0x43d, 0x43e, 0x441, 0x442, 0x44c, 0xa, 0x441, 0x443, 0x448, 0x43a, 0x438, 0x20, 0x43e, 0x434, 0x435, 0x436, 0x434, 0x44b, 0x0, // @479 "??????????????????????? ??????"
    0x43f, 0x440, 0x43e, 0x434, 0x43e, 0x43b, 0x436, 0x438, 0x442, 0x435, 0x43b, 0x44c, 0x43d, 0x43e, 0x441, 0x442, 0x44c, 0xa, 0x441, 0x443, 0x448, 0x43a, 0x438, 0x20, 0x43e, 0x431, 0x443, 0x432, 0x438, 0x0, // @510 "??????????????????????? ?????"
    0x41d, 0x435, 0x442, 0x20, 0x441, 0x432, 0x44f, 0x437, 0x438, 0x20, 0x441, 0x20, 0x43a, 0x43e, 0x43d, 0x442, 0x440, 0x43e, 0x43b, 0x43b, 0x435, 0x440, 0x43e, 0x43c, 0x21, 0x0, // @540 "??? ????? ? ????????????!"
    0x2b, 0x20, 0x414, 0x43e, 0x431, 0x430, 0x432, 0x438, 0x442, 0x44c, 0x20, 0x437, 0x430, 0x434, 0x430, 0x43d, 0x438, 0x435, 0x20, 0x441, 0x443, 0x448, 0x43a, 0x438, 0x0, // @566 "+ ???????? ??????? ?????"
    0x421, 0x443, 0x448, 0x43a, 0x430, 0x20, 0x43f, 0x43e, 0x20, 0x440, 0x430, 0x441, 0x43f, 0x438, 0x441, 0x430, 0x43d, 0x438, 0x44e, 0x20, 0x32, 0x34, 0x2f, 0x37, 0x0, // @591 "????? ?? ?????????? 24/7"
    0x41e, 0x421, 0x422, 0x41e, 0x41d, 0x41e, 0x412, 0x418, 0x422, 0x42c, 0x20, 0x420, 0x410, 0x421, 0x41f, 0x418, 0x421, 0x410, 0x41d, 0x418, 0x415, 0x0, // @616 "?????????? ??????????"
    0x421, 0x43f, 0x438, 0x441, 0x43e, 0x43a, 0x20, 0x441, 0x43e, 0x431, 0x44b, 0x442, 0x438, 0x439, 0x20, 0x43f, 0x443, 0x441, 0x442, 0x21, 0x0, // @638 "?????? ??????? ????!"
    0x41e, 0x442, 0x434, 0x435, 0x43b, 0x435, 0x43d, 0x438, 0x435, 0x20, 0x434, 0x43b, 0x44f, 0x20, 0x43e, 0x434, 0x435, 0x436, 0x434, 0x44b, 0x0, // @659 "????????? ??? ??????"
    0x417, 0x410, 0x41f, 0x423, 0x421, 0x422, 0x418, 0x422, 0x42c, 0x20, 0x420, 0x410, 0x421, 0x41f, 0x418, 0x421, 0x410, 0x41d, 0x418, 0x415, 0x0, // @680 "????????? ??????????"
    0x41e, 0x442, 0x434, 0x435, 0x43b, 0x435, 0x43d, 0x438, 0x435, 0x20, 0x434, 0x43b, 0x44f, 0x20, 0x43e, 0x431, 0x443, 0x432, 0x438, 0x0, // @701 "????????? ??? ?????"
    0x43e, 0x447, 0x438, 0x441, 0x442, 0x438, 0x442, 0x44c, 0x20, 0x440, 0x430, 0x441, 0x43f, 0x438, 0x441, 0x430, 0x43d, 0x438, 0x435, 0x0, // @721 "???????? ??????????"
    0x421, 0x423, 0x428, 0x41a, 0x410, 0x20, 0x41f, 0x41e, 0x20, 0x420, 0x410, 0x421, 0x41f, 0x418, 0x421, 0x410, 0x41d, 0x418, 0x42e, 0x0, // @741 "????? ?? ??????????"
    0x432, 0x440, 0x435, 0x43c, 0x44f, 0x20, 0x43d, 0x430, 0x447, 0x430, 0x43b, 0x430, 0x20, 0x441, 0x443, 0x448, 0x43a, 0x438, 0x0, // @761 "????? ?????? ?????"
    0x43f, 0x440, 0x43e, 0x434, 0x43e, 0x43b, 0x436, 0x438, 0x442, 0x435, 0x43b, 0x44c, 0x43d, 0x43e, 0x441, 0x442, 0x44c, 0x0, // @780 "?????????????????"
    0x421, 0x422, 0x410, 0x41d, 0x414, 0x410, 0x420, 0x422, 0x41d, 0x410, 0x42f, 0x20, 0x421, 0x423, 0x428, 0x41a, 0x410, 0x0, // @798 "??????????? ?????"
    0x43e, 0x434, 0x435, 0x436, 0x434, 0x430, 0x3a, 0x2, 0x447, 0x2e, 0x0, // @816 "??????:<>?."
    0x43e, 0x431, 0x443, 0x432, 0x44c, 0x3a, 0x2, 0x447, 0x2e, 0x0, // @827 "?????:<>?."
    0x420, 0x415, 0x416, 0x418, 0x41c, 0x20, 0x41f, 0x41e, 0x414, 0x41e, 0x413, 0x420, 0x415, 0x412, 0x410, 0x0, // @837 "????? ?????????"
    0x434, 0x43e, 0x20, 0x43e, 0x43a, 0x43e, 0x43d, 0x447, 0x430, 0x43d, 0x438, 0x44f, 0x20, 0x3a, 0x0, // @853 "?? ????????? :"
    0x441, 0x442, 0x430, 0x440, 0x442, 0x3a, 0x2, 0x0, // @868 "?????:<>"
    0x420, 0x423, 0x427, 0x41d, 0x410, 0x42f, 0x20, 0x421, 0x423, 0x428, 0x41a, 0x410, 0x0, // @876 "?????? ?????"
    0x74, 0x3d, 0x2, 0x43, 0xb0, 0x0, // @889 "t=<>C?"
    0x434, 0x435, 0x43d, 0x44c, 0x20, 0x43d, 0x435, 0x434, 0x435, 0x43b, 0x438, 0x0, // @895 "???? ??????"
    0x442, 0x435, 0x43c, 0x43f, 0x435, 0x440, 0x430, 0x442, 0x443, 0x440, 0x430, 0x0, // @907 "???????????"
    0x418, 0x434, 0x435, 0x442, 0x20, 0x441, 0x443, 0x448, 0x43a, 0x430, 0x20, 0x0, // @919 "???? ????? "
    0x2, 0x43c, 0x2e, 0x0, // @931 "<>?."
    0x421, 0x41e, 0x425, 0x420, 0x410, 0x41d, 0x418, 0x422, 0x42c, 0x0, // @935 "?????????"
    0x4e, 0x65, 0x77, 0x20, 0x54, 0x65, 0x78, 0x74, 0x0, // @945 "New Text"
    0x2, 0x2e, 0x0, // @954 "<>."
    0x417, 0x410, 0x41a, 0x420, 0x42b, 0x422, 0x42c, 0x0, // @957 "???????"
    0x43c, 0x438, 0x43d, 0x443, 0x442, 0x44b, 0x0, // @965 "??????"
    0x41e, 0x422, 0x41c, 0x415, 0x41d, 0x410, 0x0, // @972 "??????"
    0x447, 0x430, 0x441, 0x43e, 0x432, 0x0, // @979 "?????"
    0x447, 0x430, 0x441, 0x44b, 0x0, // @985 "????"
    0x43d, 0x435, 0x442, 0x0, // @990 "???"
    0x43f, 0x442, 0x2e, 0x0, // @994 "??."
    0x441, 0x431, 0x2e, 0x0, // @998 "??."
    0x432, 0x441, 0x2e, 0x0, // @1002 "??."
    0x43f, 0x43d, 0x2e, 0x0, // @1006 "??."
    0x441, 0x440, 0x2e, 0x0, // @1010 "??."
    0x432, 0x442, 0x2e, 0x0, // @1014 "??."
    0x447, 0x442, 0x2e, 0x0, // @1018 "??."
    0x4f, 0x4b, 0x0, // @1022 "OK"
    0x30, 0x38, 0x0, // @1025 "08"
    0x32, 0x33, 0x0, // @1028 "23"
    0x34, 0x30, 0x0, // @1031 "40"
    0x30, 0x30, 0x0, // @1034 "00"
    0x31, 0x32, 0x0, // @1037 "12"
    0x414, 0x430, 0x0, // @1040 "??"
    0x32, 0x30, 0x0, // @1043 "20"
    0x41e, 0x41a, 0x0, // @1046 "??"
    0x432, 0x441, 0x0, // @1049 "??"
    0x432, 0x442, 0x0, // @1052 "??"
    0x441, 0x440, 0x0, // @1055 "??"
    0x447, 0x442, 0x0, // @1058 "??"
    0x43f, 0x442, 0x0, // @1061 "??"
    0x441, 0x431, 0x0, // @1064 "??"
    0x35, 0x39, 0x0, // @1067 "59"
    0x43f, 0x43d, 0x0 // @1070 "??"
};
extern uint32_t const indicesGb[];

//array holding dynamically installed languages
struct TranslationHeader
{
    uint32_t offset_to_texts;
    uint32_t offset_to_indices;
    uint32_t offset_to_typedtext;
};
static const TranslationHeader* languagesArray[1] = { 0 };

//Compiled and linked in languages
static const uint32_t* const staticLanguageIndices[] =
{
    indicesGb
};

touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
    {
        if (languagesArray[id] != 0)
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
        }
        else
        {
            //compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
            currentLanguageIndices = staticLanguageIndices[id];
            currentLanguageTypedText = typedTextDatabaseArray[id];
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
    }
}

void touchgfx::Texts::setTranslation(touchgfx::LanguageId id, const void* translation)
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
}

