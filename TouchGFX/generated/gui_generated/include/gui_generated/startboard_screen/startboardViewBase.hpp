/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef STARTBOARDVIEWBASE_HPP
#define STARTBOARDVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/startboard_screen/startboardPresenter.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/widgets/RepeatButton.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/RadioButton.hpp>
#include <touchgfx/widgets/RadioButtonGroup.hpp>

class startboardViewBase : public touchgfx::View<startboardPresenter>
{
public:
    startboardViewBase();
    virtual ~startboardViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void SetTimeDate()
    {
        // Override and implement this function in startboard
    }

    virtual void HoursDown()
    {
        // Override and implement this function in startboard
    }

    virtual void HoursUp()
    {
        // Override and implement this function in startboard
    }

    virtual void MinutesDown()
    {
        // Override and implement this function in startboard
    }

    virtual void MinutesUp()
    {
        // Override and implement this function in startboard
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::TiledImage tiledImage1;
    touchgfx::RepeatButton hoursDown;
    touchgfx::RepeatButton hoursUp;
    touchgfx::TextAreaWithOneWildcard timerHours;
    touchgfx::TextArea hour1;
    touchgfx::TextArea minute1;
    touchgfx::RepeatButton minutesDown;
    touchgfx::TextAreaWithOneWildcard timerMinutes;
    touchgfx::RepeatButton minutesUp;
    touchgfx::ButtonWithLabel SaveTime;
    touchgfx::TextArea date;
    touchgfx::TextArea textArea1;
    touchgfx::RadioButton pnbt;
    touchgfx::RadioButton vtbt;
    touchgfx::RadioButton srbt;
    touchgfx::RadioButton chtbt;
    touchgfx::RadioButton ptbt;
    touchgfx::RadioButton sbbt;
    touchgfx::RadioButton vsbt;
    touchgfx::TextArea pntxt1;
    touchgfx::TextArea vttxt1;
    touchgfx::TextArea srtxt1;
    touchgfx::TextArea chttxt1;
    touchgfx::TextArea pttxt1;
    touchgfx::TextArea sbtxt1;
    touchgfx::TextArea vstxt1;
    touchgfx::RadioButtonGroup<7> day;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TIMERHOURS_SIZE = 10;
    touchgfx::Unicode::UnicodeChar timerHoursBuffer[TIMERHOURS_SIZE];
    static const uint16_t TIMERMINUTES_SIZE = 10;
    touchgfx::Unicode::UnicodeChar timerMinutesBuffer[TIMERMINUTES_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<startboardViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // STARTBOARDVIEWBASE_HPP
