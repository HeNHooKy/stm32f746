/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DRESSMODULBASE_HPP
#define DRESSMODULBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/AnimatedImage.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class dressmodulBase : public touchgfx::Container
{
public:
    dressmodulBase();
    virtual ~dressmodulBase() {}
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void StopDry()
    {
        // Override and implement this function in dressmodul
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image image2;
    touchgfx::TextArea dresstext;
    touchgfx::AnimatedImage animatedImage1;
    touchgfx::DigitalClock time;
    touchgfx::Button stop1;
    touchgfx::Image image1;
    touchgfx::TextAreaWithOneWildcard temp;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea dresst;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEMP_SIZE = 10;
    touchgfx::Unicode::UnicodeChar tempBuffer[TEMP_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<dressmodulBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // DRESSMODULBASE_HPP
