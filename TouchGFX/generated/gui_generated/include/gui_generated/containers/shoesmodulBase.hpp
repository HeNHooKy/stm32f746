/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SHOESMODULBASE_HPP
#define SHOESMODULBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class shoesmodulBase : public touchgfx::Container
{
public:
    shoesmodulBase();
    virtual ~shoesmodulBase() {}
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void StopDry()
    {
        // Override and implement this function in shoesmodul
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image image3;
    touchgfx::TextArea shoestext;
    touchgfx::DigitalClock time;
    touchgfx::Button stop2;
    touchgfx::Image image1;
    touchgfx::TextAreaWithOneWildcard temp;
    touchgfx::TextArea textArea3;
    touchgfx::TextArea shoes;
    touchgfx::Image image3_1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEMP_SIZE = 10;
    touchgfx::Unicode::UnicodeChar tempBuffer[TEMP_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<shoesmodulBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SHOESMODULBASE_HPP
