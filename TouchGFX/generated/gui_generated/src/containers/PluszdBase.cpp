/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/PluszdBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

PluszdBase::PluszdBase()
{
    setWidth(480);
    setHeight(272);
    fon1.setXY(0, 0);
    fon1.setBitmap(touchgfx::Bitmap(BITMAP_FON_ID));

    closebt2.setXY(313, 230);
    closebt2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_PRESED_ID));
    closebt2.setLabelText(touchgfx::TypedText(T_SINGLEUSEID211));
    closebt2.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    closebt2.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    hoursDownLeftbt.setXY(22, 94);
    hoursDownLeftbt.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_PASSED_ID));
    hoursDownLeftbt.setDelay(60);
    hoursDownLeftbt.setInterval(6);

    hoursUpLeftbt.setXY(91, 94);
    hoursUpLeftbt.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_PASSED_ID));
    hoursUpLeftbt.setDelay(60);
    hoursUpLeftbt.setInterval(6);

    timerHours.setXY(50, 96);
    timerHours.setColor(touchgfx::Color::getColorFrom24BitRGB(8, 0, 0));
    timerHours.setLinespacing(0);
    Unicode::snprintf(timerHoursBuffer, TIMERHOURS_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID212).getText());
    timerHours.setWildcard(timerHoursBuffer);
    timerHours.resizeToCurrentText();
    timerHours.setTypedText(touchgfx::TypedText(T_TEXTID2));

    hour11.setXY(52, 80);
    hour11.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    hour11.setLinespacing(0);
    hour11.setTypedText(touchgfx::TypedText(T_SINGLEUSEID213));

    savebt.setXY(16, 230);
    savebt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_PRESED_ID));
    savebt.setLabelText(touchgfx::TypedText(T_SINGLEUSEID214));
    savebt.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    savebt.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    minute1.setXY(157, 80);
    minute1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    minute1.setLinespacing(0);
    minute1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID215));

    minutesDownLeftbt.setXY(136, 94);
    minutesDownLeftbt.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_PASSED_ID));
    minutesDownLeftbt.setDelay(60);
    minutesDownLeftbt.setInterval(6);

    timerMinutesLeft.setXY(164, 96);
    timerMinutesLeft.setColor(touchgfx::Color::getColorFrom24BitRGB(10, 0, 0));
    timerMinutesLeft.setLinespacing(0);
    Unicode::snprintf(timerMinutesLeftBuffer, TIMERMINUTESLEFT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID216).getText());
    timerMinutesLeft.setWildcard(timerMinutesLeftBuffer);
    timerMinutesLeft.resizeToCurrentText();
    timerMinutesLeft.setTypedText(touchgfx::TypedText(T_TEXTID2));

    minutesUpLeftbt.setXY(205, 94);
    minutesUpLeftbt.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_PASSED_ID));
    minutesUpLeftbt.setDelay(60);
    minutesUpLeftbt.setInterval(6);

    timestarttext.setXY(41, 52);
    timestarttext.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    timestarttext.setLinespacing(0);
    timestarttext.setTypedText(touchgfx::TypedText(T_SINGLEUSEID217));

    DownClockLeftbt.setXY(292, 89);
    DownClockLeftbt.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_PASSED_ID));
    DownClockLeftbt.setDelay(60);
    DownClockLeftbt.setInterval(6);

    UpClockLeftbt.setXY(361, 89);
    UpClockLeftbt.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_PASSED_ID));
    UpClockLeftbt.setDelay(60);
    UpClockLeftbt.setInterval(6);

    ClockWorkLeft.setXY(320, 92);
    ClockWorkLeft.setColor(touchgfx::Color::getColorFrom24BitRGB(8, 0, 0));
    ClockWorkLeft.setLinespacing(0);
    Unicode::snprintf(ClockWorkLeftBuffer, CLOCKWORKLEFT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID218).getText());
    ClockWorkLeft.setWildcard(ClockWorkLeftBuffer);
    ClockWorkLeft.resizeToCurrentText();
    ClockWorkLeft.setTypedText(touchgfx::TypedText(T_TEXTID2));

    hour2.setXY(398, 100);
    hour2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    hour2.setLinespacing(0);
    hour2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID219));

    timeclock1.setXY(278, 46);
    timeclock1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    timeclock1.setLinespacing(0);
    timeclock1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID220));

    DownClockRightbt.setXY(288, 176);
    DownClockRightbt.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_PASSED_ID));
    DownClockRightbt.setDelay(60);
    DownClockRightbt.setInterval(6);

    UpClockRightbt.setXY(357, 176);
    UpClockRightbt.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_PASSED_ID));
    UpClockRightbt.setDelay(60);
    UpClockRightbt.setInterval(6);

    ClockWorkRight.setXY(316, 179);
    ClockWorkRight.setColor(touchgfx::Color::getColorFrom24BitRGB(8, 0, 0));
    ClockWorkRight.setLinespacing(0);
    Unicode::snprintf(ClockWorkRightBuffer, CLOCKWORKRIGHT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID221).getText());
    ClockWorkRight.setWildcard(ClockWorkRightBuffer);
    ClockWorkRight.resizeToCurrentText();
    ClockWorkRight.setTypedText(touchgfx::TypedText(T_TEXTID2));

    hour1.setXY(393, 186);
    hour1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    hour1.setLinespacing(0);
    hour1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID222));

    timeclock2.setXY(278, 136);
    timeclock2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    timeclock2.setLinespacing(0);
    timeclock2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID223));

    pnbt.setXY(9, 7);
    pnbt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK__ID));
    pnbt.setSelected(true);
    pnbt.setDeselectionEnabled(false);

    vtbt.setXY(72, 7);
    vtbt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK__ID));
    vtbt.setSelected(false);
    vtbt.setDeselectionEnabled(false);

    srbt.setXY(138, 7);
    srbt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK__ID));
    srbt.setSelected(false);
    srbt.setDeselectionEnabled(false);

    chtbt.setXY(201, 7);
    chtbt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_ID));
    chtbt.setSelected(false);
    chtbt.setDeselectionEnabled(false);

    ptbt.setXY(266, 7);
    ptbt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK__ID));
    ptbt.setSelected(false);
    ptbt.setDeselectionEnabled(false);

    sbbt.setXY(330, 7);
    sbbt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK__ID));
    sbbt.setSelected(false);
    sbbt.setDeselectionEnabled(false);

    vsbt.setXY(394, 7);
    vsbt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK__ID));
    vsbt.setSelected(false);
    vsbt.setDeselectionEnabled(false);

    pntxt.setXY(40, 17);
    pntxt.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    pntxt.setLinespacing(0);
    pntxt.setTypedText(touchgfx::TypedText(T_SINGLEUSEID224));

    vttxt.setXY(103, 17);
    vttxt.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    vttxt.setLinespacing(0);
    vttxt.setTypedText(touchgfx::TypedText(T_SINGLEUSEID225));

    srtxt.setXY(169, 17);
    srtxt.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    srtxt.setLinespacing(0);
    srtxt.setTypedText(touchgfx::TypedText(T_SINGLEUSEID226));

    chttxt.setXY(233, 17);
    chttxt.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    chttxt.setLinespacing(0);
    chttxt.setTypedText(touchgfx::TypedText(T_SINGLEUSEID227));

    pttxt.setXY(297, 17);
    pttxt.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    pttxt.setLinespacing(0);
    pttxt.setTypedText(touchgfx::TypedText(T_SINGLEUSEID228));

    sbtxt.setXY(363, 17);
    sbtxt.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    sbtxt.setLinespacing(0);
    sbtxt.setTypedText(touchgfx::TypedText(T_SINGLEUSEID229));

    vstxt.setXY(427, 17);
    vstxt.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    vstxt.setLinespacing(0);
    vstxt.setTypedText(touchgfx::TypedText(T_SINGLEUSEID230));

    TempSliderLeft.setXY(51, 172);
    TempSliderLeft.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
    TempSliderLeft.setupHorizontalSlider(3, 7, 0, 0, 125);
    TempSliderLeft.setValueRange(13, 90);
    TempSliderLeft.setValue(90);

    tempLeftInd.setXY(13, 169);
    tempLeftInd.setColor(touchgfx::Color::getColorFrom24BitRGB(10, 0, 0));
    tempLeftInd.setLinespacing(0);
    Unicode::snprintf(tempLeftIndBuffer, TEMPLEFTIND_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID231).getText());
    tempLeftInd.setWildcard(tempLeftIndBuffer);
    tempLeftInd.resizeToCurrentText();
    tempLeftInd.setTypedText(touchgfx::TypedText(T_TEXTID2));

    temp2.setXY(77, 153);
    temp2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    temp2.setLinespacing(0);
    temp2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID232));

    add(fon1);
    add(closebt2);
    add(hoursDownLeftbt);
    add(hoursUpLeftbt);
    add(timerHours);
    add(hour11);
    add(savebt);
    add(minute1);
    add(minutesDownLeftbt);
    add(timerMinutesLeft);
    add(minutesUpLeftbt);
    add(timestarttext);
    add(DownClockLeftbt);
    add(UpClockLeftbt);
    add(ClockWorkLeft);
    add(hour2);
    add(timeclock1);
    add(DownClockRightbt);
    add(UpClockRightbt);
    add(ClockWorkRight);
    add(hour1);
    add(timeclock2);
    add(pnbt);
    add(vtbt);
    add(srbt);
    add(chtbt);
    add(ptbt);
    add(sbbt);
    add(vsbt);
    add(pntxt);
    add(vttxt);
    add(srtxt);
    add(chttxt);
    add(pttxt);
    add(sbtxt);
    add(vstxt);
    add(TempSliderLeft);
    add(tempLeftInd);
    add(temp2);
    day.add(pnbt);
    day.add(vtbt);
    day.add(srbt);
    day.add(chtbt);
    day.add(ptbt);
    day.add(sbbt);
    day.add(vsbt);
}

void PluszdBase::initialize()
{

}
