/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/dateboard_screen/dateboardViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

dateboardViewBase::dateboardViewBase() :
    buttonCallback(this, &dateboardViewBase::buttonCallbackHandler),
    radioButtonSelectedCallback(this, &dateboardViewBase::radioButtonSelectedCallbackHandler)
{

    fon.setXY(0, 0);
    fon.setBitmap(touchgfx::Bitmap(BITMAP_FON_ID));

    logo.setXY(97, 4);
    logo.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    logo.setLinespacing(0);
    logo.setTypedText(touchgfx::TypedText(T_SINGLEUSEID49));

    startbt.setXY(28, 225);
    startbt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS9_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS8_ID));
    startbt.setLabelText(touchgfx::TypedText(T_SINGLEUSEID50));
    startbt.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    startbt.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    startbt.setAction(buttonCallback);

    closebt.setXY(305, 228);
    closebt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ID));
    closebt.setLabelText(touchgfx::TypedText(T_SINGLEUSEID51));
    closebt.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    closebt.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    closebt.setAction(buttonCallback);

    minusbt.setXY(244, 191);
    minusbt.setBitmaps(touchgfx::Bitmap(BITMAP_CLIC2_ID), touchgfx::Bitmap(BITMAP_CLIC1_ID));
    minusbt.setLabelText(touchgfx::TypedText(T_SINGLEUSEID62));
    minusbt.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    minusbt.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    minusbt.setAction(buttonCallback);

    plusbt.setXY(22, 191);
    plusbt.setBitmaps(touchgfx::Bitmap(BITMAP_CLIC2_ID), touchgfx::Bitmap(BITMAP_CLIC1_ID));
    plusbt.setLabelText(touchgfx::TypedText(T_SINGLEUSEID59));
    plusbt.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    plusbt.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    plusbt.setAction(buttonCallback);

    pnbt.setXY(19, 32);
    pnbt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK__ID));
    pnbt.setSelected(true);
    pnbt.setDeselectionEnabled(false);

    vtbt.setXY(82, 32);
    vtbt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK__ID));
    vtbt.setSelected(false);
    vtbt.setDeselectionEnabled(false);

    srbt.setXY(148, 32);
    srbt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK__ID));
    srbt.setSelected(false);
    srbt.setDeselectionEnabled(false);

    chtbt.setXY(210, 32);
    chtbt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_ID));
    chtbt.setSelected(false);
    chtbt.setDeselectionEnabled(false);

    ptbt.setXY(276, 32);
    ptbt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK__ID));
    ptbt.setSelected(false);
    ptbt.setDeselectionEnabled(false);

    sbbt.setXY(339, 32);
    sbbt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK__ID));
    sbbt.setSelected(false);
    sbbt.setDeselectionEnabled(false);

    vsbt.setXY(404, 32);
    vsbt.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ID), touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK__ID));
    vsbt.setSelected(false);
    vsbt.setDeselectionEnabled(false);

    pntxt1.setXY(49, 42);
    pntxt1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    pntxt1.setLinespacing(0);
    pntxt1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID144));

    vttxt1.setXY(112, 42);
    vttxt1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    vttxt1.setLinespacing(0);
    vttxt1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID145));

    srtxt1.setXY(178, 42);
    srtxt1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    srtxt1.setLinespacing(0);
    srtxt1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID146));

    chttxt1.setXY(242, 42);
    chttxt1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    chttxt1.setLinespacing(0);
    chttxt1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID147));

    pttxt1.setXY(306, 42);
    pttxt1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    pttxt1.setLinespacing(0);
    pttxt1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID148));

    sbtxt1.setXY(372, 42);
    sbtxt1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    sbtxt1.setLinespacing(0);
    sbtxt1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID149));

    vstxt1.setXY(436, 42);
    vstxt1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    vstxt1.setLinespacing(0);
    vstxt1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID150));

    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_FON4_ID));
    tiledImage1.setPosition(23, 80, 442, 100);
    tiledImage1.setAlpha(187);
    tiledImage1.setOffset(0, 0);

    Container.setPosition(23, 80, 442, 100);
    Container.setScrollbarsColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    list.setDirection(touchgfx::SOUTH);
    list.setPosition(0, 0, 442, 100);
    Container.add(list);
    Container.setScrollbarsPermanentlyVisible();
    Container.setScrollbarsVisible(false);

    addevent1.setXY(0, 0);
    addevent1.setVisible(false);

    startModul.setBackground(touchgfx::BitmapId(BITMAP_FON_ID), 0, 0);
    startModul.setShadeColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    startModul.setShadeAlpha(150);
    startModul.hide();

    skin11.setXY(0, 0);
    startModul.add(skin11);

    stopdryevent.setXY(140, 225);
    stopdryevent.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS7_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS6_ID));
    stopdryevent.setLabelText(touchgfx::TypedText(T_SINGLEUSEID252));
    stopdryevent.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    stopdryevent.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    stopdryevent.setAction(buttonCallback);
    startModul.add(stopdryevent);

    textArea1.setPosition(8, 87, 226, 74);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID253));
    startModul.add(textArea1);

    textArea1_1.setPosition(251, 87, 226, 74);
    textArea1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID254));
    startModul.add(textArea1_1);

    dressmodul1.setXY(0, 26);
    dressmodul1.setVisible(false);
    startModul.add(dressmodul1);

    shoesmodul1.setXY(245, 26);
    shoesmodul1.setVisible(false);
    startModul.add(shoesmodul1);

    msgBox1.setXY(28, 61);
    msgBox1.setVisible(false);

    clearbox.setBackground(touchgfx::BitmapId(BITMAP_FON4_ID), 25, 61);
    clearbox.setShadeColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    clearbox.setShadeAlpha(150);
    clearbox.hide();

    text.setXY(96, 34);
    text.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    text.setLinespacing(0);
    text.setTypedText(touchgfx::TypedText(T_SINGLEUSEID249));
    clearbox.add(text);

    yesbt_1.setXY(12, 108);
    yesbt_1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_PRESED_ID));
    yesbt_1.setLabelText(touchgfx::TypedText(T_SINGLEUSEID250));
    yesbt_1.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    yesbt_1.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    yesbt_1.setAction(buttonCallback);
    clearbox.add(yesbt_1);

    nobt_1.setXY(265, 108);
    nobt_1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_PRESED_ID));
    nobt_1.setLabelText(touchgfx::TypedText(T_SINGLEUSEID251));
    nobt_1.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    nobt_1.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    nobt_1.setAction(buttonCallback);
    clearbox.add(nobt_1);

    add(fon);
    add(logo);
    add(startbt);
    add(closebt);
    add(minusbt);
    add(plusbt);
    add(pnbt);
    add(vtbt);
    add(srbt);
    add(chtbt);
    add(ptbt);
    add(sbbt);
    add(vsbt);
    add(pntxt1);
    add(vttxt1);
    add(srtxt1);
    add(chttxt1);
    add(pttxt1);
    add(sbtxt1);
    add(vstxt1);
    add(tiledImage1);
    add(Container);
    add(addevent1);
    add(startModul);
    add(msgBox1);
    add(clearbox);
    day.add(pnbt);
    day.add(vtbt);
    day.add(srbt);
    day.add(chtbt);
    day.add(ptbt);
    day.add(sbbt);
    day.add(vsbt);
    day.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
}

void dateboardViewBase::setupScreen()
{
    addevent1.initialize();
    skin11.initialize();
    dressmodul1.initialize();
    shoesmodul1.initialize();
    msgBox1.initialize();
}

void dateboardViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &startbt)
    {
        //StartDryEvents
        //When startbt clicked call virtual function
        //Call StartDryEvents
        StartDryEvents();
    }
    else if (&src == &closebt)
    {
        //close
        //When closebt clicked change screen to mainboard
        //Go to mainboard with no screen transition
        application().gotomainboardScreenNoTransition();
    }
    else if (&src == &minusbt)
    {
        //clear
        //When minusbt clicked show clearbox
        //Show clearbox
        clearbox.setVisible(true);
        clearbox.invalidate();
    }
    else if (&src == &plusbt)
    {
        //PlusWidget
        //When plusbt clicked call virtual function
        //Call CallAddEvent
        CallAddEvent();
    }
    else if (&src == &stopdryevent)
    {
        //StopDryEvents
        //When stopdryevent clicked call virtual function
        //Call StopDryEvents
        StopDryEvents();
    }
    else if (&src == &yesbt_1)
    {
        //ClearAll
        //When yesbt_1 clicked call virtual function
        //Call ClearAll
        ClearAll();
    }
    else if (&src == &nobt_1)
    {
        //HideClearBox
        //When nobt_1 clicked hide clearbox
        //Hide clearbox
        clearbox.setVisible(false);
        clearbox.invalidate();
    }
}

void dateboardViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &pnbt)
    {
        //SetMonday
        //When pnbt selected call virtual function
        //Call SetMonD
        SetMonD();
    }
    else if (&src == &vtbt)
    {
        //SetTwoD
        //When vtbt selected call virtual function
        //Call SetTwoD
        SetTwoD();
    }
    else if (&src == &srbt)
    {
        //SetWedD
        //When srbt selected call virtual function
        //Call SetWedD
        SetWedD();
    }
    else if (&src == &chtbt)
    {
        //SetThuD
        //When chtbt selected call virtual function
        //Call SetThuD
        SetThuD();
    }
    else if (&src == &ptbt)
    {
        //SetFriD
        //When ptbt selected call virtual function
        //Call SetFriD
        SetFriD();
    }
    else if (&src == &sbbt)
    {
        //SetSatD
        //When sbbt selected call virtual function
        //Call SetSatD
        SetSatD();
    }
    else if (&src == &vsbt)
    {
        //SetSunD
        //When vsbt selected call virtual function
        //Call SetSunD
        SetSunD();
    }
}
