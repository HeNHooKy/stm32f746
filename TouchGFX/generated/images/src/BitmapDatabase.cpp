// 4.13.0 dither_algorithm=2 alpha_dither=yes layout_rotation=0 opaque_image_format=RGB888 non_opaque_image_format=ARGB8888 section=ExtFlashSection extra_section=ExtFlashSection generate_png=no 0x7b3a22aa
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <platform/driver/lcd/LCD24bpp.hpp>

extern const unsigned char _blue_buttons_presed[]; // BITMAP_BLUE_BUTTONS_PRESED_ID = 0, Size: 156x35 pixels
extern const unsigned char _blue_buttons_round[]; // BITMAP_BLUE_BUTTONS_ROUND_ID = 1, Size: 156x35 pixels
extern const unsigned char _blue_buttons_round_m[]; // BITMAP_BLUE_BUTTONS_ROUND_M_ID = 2, Size: 220x50 pixels
extern const unsigned char _blue_buttons_round_m_pressed[]; // BITMAP_BLUE_BUTTONS_ROUND_M_PRESSED_ID = 3, Size: 220x50 pixels
extern const unsigned char _blue_check_buttons[]; // BITMAP_BLUE_CHECK_BUTTONS_ID = 4, Size: 65x50 pixels
extern const unsigned char _blue_check_buttons_check[]; // BITMAP_BLUE_CHECK_BUTTONS_CHECK_ID = 5, Size: 65x50 pixels
extern const unsigned char _blue_check_buttons_check_[]; // BITMAP_BLUE_CHECK_BUTTONS_CHECK__ID = 6, Size: 65x50 pixels
extern const unsigned char _blue_check_buttons_check_round[]; // BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_ID = 7, Size: 65x50 pixels
extern const unsigned char _blue_slider_horizontal_small_indicators_slider_horizontal_small_round_knob[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID = 8, Size: 54x34 pixels
extern const unsigned char _blue_slider_horizontal_small_slider_horizontal_small_round_back[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID = 9, Size: 172x20 pixels
extern const unsigned char _blue_slider_horizontal_small_slider_horizontal_small_round_fill[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_FILL_ID = 10, Size: 172x20 pixels
extern const unsigned char _blue_togglebars[]; // BITMAP_BLUE_TOGGLEBARS_ID = 11, Size: 160x40 pixels
extern const unsigned char _blue_togglebars2[]; // BITMAP_BLUE_TOGGLEBARS2_ID = 12, Size: 160x40 pixels
extern const unsigned char _blue_togglebars3[]; // BITMAP_BLUE_TOGGLEBARS3_ID = 13, Size: 160x40 pixels
extern const unsigned char _blue_togglebars4[]; // BITMAP_BLUE_TOGGLEBARS4_ID = 14, Size: 160x40 pixels
extern const unsigned char _blue_togglebars6[]; // BITMAP_BLUE_TOGGLEBARS6_ID = 15, Size: 220x40 pixels
extern const unsigned char _blue_togglebars7[]; // BITMAP_BLUE_TOGGLEBARS7_ID = 16, Size: 220x40 pixels
extern const unsigned char _blue_togglebars8[]; // BITMAP_BLUE_TOGGLEBARS8_ID = 17, Size: 200x40 pixels
extern const unsigned char _blue_togglebars9[]; // BITMAP_BLUE_TOGGLEBARS9_ID = 18, Size: 200x40 pixels
extern const unsigned char _blue_togglebars_off[]; // BITMAP_BLUE_TOGGLEBARS_OFF_ID = 19, Size: 96x38 pixels
extern const unsigned char _blue_togglebars_off2[]; // BITMAP_BLUE_TOGGLEBARS_OFF2_ID = 20, Size: 96x38 pixels
extern const unsigned char _blue_togglebars_on[]; // BITMAP_BLUE_TOGGLEBARS_ON_ID = 21, Size: 96x38 pixels
extern const unsigned char _blue_togglebars_on2[]; // BITMAP_BLUE_TOGGLEBARS_ON2_ID = 22, Size: 96x38 pixels
extern const unsigned char _bulbgraphoff[]; // BITMAP_BULBGRAPHOFF_ID = 23, Size: 44x54 pixels
extern const unsigned char _bulbgraphon[]; // BITMAP_BULBGRAPHON_ID = 24, Size: 44x54 pixels
extern const unsigned char _calendar[]; // BITMAP_CALENDAR_ID = 25, Size: 440x25 pixels
extern const unsigned char _clear[]; // BITMAP_CLEAR_ID = 26, Size: 45x19 pixels
extern const unsigned char _clic1[]; // BITMAP_CLIC1_ID = 27, Size: 220x25 pixels
extern const unsigned char _clic2[]; // BITMAP_CLIC2_ID = 28, Size: 220x25 pixels
extern const unsigned char _dark_icons_back_arrow[]; // BITMAP_DARK_ICONS_BACK_ARROW_ID = 29, Size: 45x42 pixels
extern const unsigned char _dark_icons_back_arrow_passed[]; // BITMAP_DARK_ICONS_BACK_ARROW_PASSED_ID = 30, Size: 45x42 pixels
extern const unsigned char _dark_icons_next_arrow[]; // BITMAP_DARK_ICONS_NEXT_ARROW_ID = 31, Size: 45x42 pixels
extern const unsigned char _dark_icons_next_arrow_passed[]; // BITMAP_DARK_ICONS_NEXT_ARROW_PASSED_ID = 32, Size: 45x42 pixels
extern const unsigned char _fon[]; // BITMAP_FON_ID = 33, Size: 480x272 pixels
extern const unsigned char _fon4[]; // BITMAP_FON4_ID = 34, Size: 430x150 pixels
extern const unsigned char _fon6[]; // BITMAP_FON6_ID = 35, Size: 235x201 pixels
extern const unsigned char _fon7[]; // BITMAP_FON7_ID = 36, Size: 239x202 pixels
extern const unsigned char _icontime[]; // BITMAP_ICONTIME_ID = 37, Size: 130x50 pixels
extern const unsigned char _line[]; // BITMAP_LINE_ID = 38, Size: 3x180 pixels
extern const unsigned char _logo[]; // BITMAP_LOGO_ID = 39, Size: 175x80 pixels
extern const unsigned char _ok_button[]; // BITMAP_OK_BUTTON_ID = 40, Size: 120x44 pixels
extern const unsigned char _ok_button_pressed[]; // BITMAP_OK_BUTTON_PRESSED_ID = 41, Size: 120x44 pixels
extern const unsigned char _thermometer_icon_icons_com_62485[]; // BITMAP_THERMOMETER_ICON_ICONS_COM_62485_ID = 42, Size: 50x50 pixels
extern const unsigned char _unikon_s[]; // BITMAP_UNIKON_S_ID = 43, Size: 100x100 pixels
extern const unsigned char _warning[]; // BITMAP_WARNING_ID = 44, Size: 150x150 pixels
extern const unsigned char _warning_s[]; // BITMAP_WARNING_S_ID = 45, Size: 32x32 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _blue_buttons_presed, 0, 156, 35, 12, 1, 132, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 32, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_buttons_round, 0, 156, 35, 13, 2, 130, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 30, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_buttons_round_m, 0, 220, 50, 19, 3, 182, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 42, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_buttons_round_m_pressed, 0, 220, 50, 18, 1, 184, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 47, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_check_buttons, 0, 65, 50, 8, 10, 18, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 17, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_check_buttons_check, 0, 65, 50, 8, 10, 18, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 17, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_check_buttons_check_, 0, 65, 50, 8, 10, 18, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 17, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_check_buttons_check_round, 0, 65, 50, 8, 10, 18, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 17, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_slider_horizontal_small_indicators_slider_horizontal_small_round_knob, 0, 54, 34, 8, 4, 38, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 24, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_slider_horizontal_small_slider_horizontal_small_round_back, 0, 172, 20, 10, 0, 152, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_slider_horizontal_small_slider_horizontal_small_round_fill, 0, 172, 20, 10, 0, 152, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_togglebars, 0, 160, 40, 13, 7, 135, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 31, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_togglebars2, 0, 160, 40, 13, 7, 135, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 31, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_togglebars3, 0, 160, 40, 13, 3, 134, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 36, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_togglebars4, 0, 160, 40, 13, 3, 134, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 36, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_togglebars6, 0, 220, 40, 12, 3, 196, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 36, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_togglebars7, 0, 220, 40, 12, 3, 195, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 36, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_togglebars8, 0, 200, 40, 13, 7, 175, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 31, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_togglebars9, 0, 200, 40, 13, 7, 175, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 31, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_togglebars_off, 0, 96, 38, 13, 1, 70, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 36, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_togglebars_off2, 0, 96, 38, 13, 1, 70, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 36, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_togglebars_on, 0, 96, 38, 9, 6, 78, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 29, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_togglebars_on2, 0, 96, 38, 9, 6, 78, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 29, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _bulbgraphoff, 0, 44, 54, 14, 4, 14, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 42, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _bulbgraphon, 0, 44, 54, 14, 3, 14, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 44, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _calendar, 0, 440, 25, 0, 0, 0, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 0, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _clear, 0, 45, 19, 35, 7, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _clic1, 0, 220, 25, 0, 0, 0, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 0, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _clic2, 0, 220, 25, 0, 0, 220, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 25, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _dark_icons_back_arrow, 0, 45, 42, 7, 13, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 14, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _dark_icons_back_arrow_passed, 0, 45, 42, 6, 14, 5, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 11, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _dark_icons_next_arrow, 0, 45, 42, 34, 13, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 14, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _dark_icons_next_arrow_passed, 0, 45, 42, 34, 13, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 14, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _fon, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _fon4, 0, 430, 150, 1, 1, 428, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 149, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _fon6, 0, 235, 201, 0, 0, 235, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 201, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _fon7, 0, 239, 202, 0, 0, 239, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 202, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _icontime, 0, 130, 50, 0, 0, 0, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 0, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _line, 0, 3, 180, 0, 0, 3, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 180, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _logo, 0, 175, 80, 43, 13, 34, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 16, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _ok_button, 0, 120, 44, 22, 2, 76, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _ok_button_pressed, 0, 120, 44, 13, 2, 94, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 40, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _thermometer_icon_icons_com_62485, 0, 50, 50, 22, 3, 7, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 46, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _unikon_s, 0, 100, 100, 0, 0, 100, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 100, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _warning, 0, 150, 150, 43, 69, 65, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 61, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _warning_s, 0, 32, 32, 9, 14, 15, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 15, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
